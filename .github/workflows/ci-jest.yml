# GitHub Actions workflow for running Jest tests with PostgreSQL service
name: CI - Jest Integration Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U testuser -d testdb" --health-interval=5s --health-timeout=5s --health-retries=10
    env:
      PGUSER: testuser
      PGPASSWORD: testpass
      PGDATABASE: testdb
      PGHOST: localhost
      PGPORT: 5432
      NODE_ENV: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..20}; do
            pg_isready -h localhost -U testuser -d testdb && break
            sleep 2
          done

      - name: Run DB migrations (Flyway)
        run: |
          docker run --rm \
            --network host \
            -v ${{ github.workspace }}/ddl-scripts:/flyway/sql \
            flyway/flyway:10 \
            -url=jdbc:postgresql://localhost:5432/testdb \
            -user=testuser \
            -password=testpass \
            migrate

      - name: Run Jest tests
        run: npm test
